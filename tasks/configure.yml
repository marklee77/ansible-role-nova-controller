---
# FIXME: my_ip should always be an ip address, so do lookup in case it's a
# host...

- name: ensure nova.conf is properly configured
  ini_file:
    dest: /etc/nova/nova.conf
    group: nova
    mode: 0640
    section: "{{ item.section }}"
    option: "{{ item.option }}"
    value: "{{ item.value }}"
  with_items:
    - { section: DEFAULT,
        option: verbose, value: "{{ openstack_log_verbose }}" }
    - { section: DEFAULT, option: debug, value: "{{ openstack_log_debug }}" }
    - { section: DEFAULT, option: log_dir, value: /var/log/nova }
    - { section: DEFAULT, option: rpc_backend, value: rabbit }
    - { section: DEFAULT,
        option: rabbit_host, value: "{{ openstack_rabbitmq_host }}" }
    - { section: DEFAULT, option: rabbit_port,
        value: "{{ openstack_rabbitmq_port }}" }
    - { section: DEFAULT, option: rabbit_userid, value: nova }
    - { section: DEFAULT, option: rabbit_password,
        value: "{{ openstack_rabbitmq_nova_password }}" }
    - { section: DEFAULT, option: rabbit_virtual_host, value: /nova }
    - { section: DEFAULT,
        option: my_ip, value: "{{ openstack_compute_node_ip }}" }
    - { section: DEFAULT, option: vncserver_listen,
        value: "{{ openstack_vncserver_bind_address }}" }
    - { section: DEFAULT, option: vncserver_proxyclient_address,
        value: "{{ openstack_vncserver_bind_address }}" }
    - { section: DEFAULT, option: service_neutron_metadata_proxy, value: true }
    - { section: DEFAULT, option: neutron_metadata_proxy_shared_secret, 
        value: "{{ openstack_compute_metadata_secret }}" }
    - { section: DEFAULT, option: auth_strategy, value: keystone }
    - { section: DEFAULT,
        option: network_api_class, value: nova.network.neutronv2.api.API }
    - { section: DEFAULT,
        option: neutron_url, value: "{{ openstack_network_internal_url }}" }
    - { section: DEFAULT, option: neutron_auth_strategy, value: keystone }
    - { section: DEFAULT, option: neutron_admin_tenant_name, value: service }
    - { section: DEFAULT, option: neutron_admin_username, value: neutron }
    - { section: DEFAULT, option: neutron_admin_password,
        value: "{{ openstack_identity_neutron_password }}" }
    - { section: DEFAULT, option: neutron_admin_auth_url,
        value: "{{ openstack_identity_internal_url }}" }
    - { section: DEFAULT, option: linuxnet_interface_driver,
        value: nova.network.linux_net.LinuxOVSInterfaceDriver }
    - { section: DEFAULT,
        option: firewall_driver, value: nova.virt.firewall.NoopFirewallDriver }
    - { section: DEFAULT, option: security_group_api, value: neutron }
    - { section: DEFAULT, option: cpu_allocation_ratio, 
        value: "{{ openstack_compute_cpu_allocation_ratio }}" }
    - { section: DEFAULT, option: ram_allocation_ratio, 
        value: "{{ openstack_compute_ram_allocation_ratio }}" }
    - { section: DEFAULT, option: disk_allocation_ratio, 
        value: "{{ openstack_compute_disk_allocation_ratio }}" }
    - { section: database, option: connection,
        value: "mysql://nova:{{ openstack_mysql_nova_password }}@{{
                  openstack_mysql_host }}:{{ openstack_mysql_port }}/nova" }
    - { section: keystone_authtoken,
        option: auth_uri, value: "{{ openstack_identity_internal_url }}" }
    - { section: keystone_authtoken, option: auth_host,
        value: "{{ openstack_identity_endpoint_host }}" }
    - { section: keystone_authtoken, option: auth_port, value: 35357 }
    - { section: keystone_authtoken, option: auth_protocol, value: http }
    - { section: keystone_authtoken, option: admin_tenant_name,
        value: service }
    - { section: keystone_authtoken, option: admin_user, value: nova }
    - { section: keystone_authtoken, option: admin_password,
        value: "{{ openstack_identity_nova_password }}" }
  register: modify_nova_ini

- name: ensure nova database has been synced
  sudo_user: nova
  command: /usr/bin/nova-manage db sync
  when: create_nova_db|changed or modify_nova_ini|changed
  failed_when: false

- name: restart nova services if necessary
  shell: >
    ls /etc/init*/*nova-* | while read file; do 
      service $(basename $file .conf) restart;
    done
  when: modify_nova_ini|changed

- name: ensure nova sqlite is deleted
  file:
    dest: /var/lib/nova/nova.sqlite
    state: absent
